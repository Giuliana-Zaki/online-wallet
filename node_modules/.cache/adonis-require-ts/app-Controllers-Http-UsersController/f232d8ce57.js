"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const UsersServices_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Services/UsersServices"));
const RegisterValidator_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Validators/RegisterValidator"));
class UsersController {
    async index({ response }) {
        const user = await UsersServices_1.default.list();
        response.status(200).json({ user });
    }
    async store({ request, response, auth }) {
        const data = await request.validate(RegisterValidator_1.default);
        const user = await UsersServices_1.default.create(data);
        response.status(201).json({ user: user });
        await auth.login(user);
    }
    async show({ response, params }) {
        const id = await params.id;
        const user = await UsersServices_1.default.profile(id);
        response.status(200).json({ user });
    }
    async update({ request, response, params }) {
        const data = await request.validate(RegisterValidator_1.default);
        const id = await params.id;
        const user = await UsersServices_1.default.edit(id, data);
        response.status(200).json({ user });
    }
    async destroy({ response, params }) {
        const id = await params.id;
        const user = await UsersServices_1.default.delete(id);
        response.status(200).json({ user });
    }
}
exports.default = UsersController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlcnNDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVXNlcnNDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EscUdBQXVEO0FBQ3ZELCtHQUFpRTtBQUVqRSxNQUFxQixlQUFlO0lBQzNCLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxRQUFRLEVBQXVCO1FBQ2xELE1BQU0sSUFBSSxHQUFHLE1BQU0sdUJBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN4QyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUNNLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBdUI7UUFDakUsTUFBTSxJQUFJLEdBQUcsTUFBTSxPQUFPLENBQUMsUUFBUSxDQUFDLDJCQUFpQixDQUFDLENBQUM7UUFDdkQsTUFBTSxJQUFJLEdBQUcsTUFBTSx1QkFBYSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQzFDLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBQ00sS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQXVCO1FBQ3pELE1BQU0sRUFBRSxHQUFHLE1BQU0sTUFBTSxDQUFDLEVBQUUsQ0FBQztRQUMzQixNQUFNLElBQUksR0FBRyxNQUFNLHVCQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzdDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ00sS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUF1QjtRQUNwRSxNQUFNLElBQUksR0FBRyxNQUFNLE9BQU8sQ0FBQyxRQUFRLENBQUMsMkJBQWlCLENBQUMsQ0FBQztRQUN2RCxNQUFNLEVBQUUsR0FBRyxNQUFNLE1BQU0sQ0FBQyxFQUFFLENBQUM7UUFDM0IsTUFBTSxJQUFJLEdBQUcsTUFBTSx1QkFBYSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEQsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDTSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBdUI7UUFDNUQsTUFBTSxFQUFFLEdBQUcsTUFBTSxNQUFNLENBQUMsRUFBRSxDQUFDO1FBQzNCLE1BQU0sSUFBSSxHQUFHLE1BQU0sdUJBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDNUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXRDLENBQUM7Q0FDRjtBQTVCRCxrQ0E0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0J1xuaW1wb3J0IFVzZXJzU2VydmljZXMgZnJvbSAnQXBwL1NlcnZpY2VzL1VzZXJzU2VydmljZXMnO1xuaW1wb3J0IFJlZ2lzdGVyVmFsaWRhdG9yIGZyb20gXCJBcHAvVmFsaWRhdG9ycy9SZWdpc3RlclZhbGlkYXRvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2Vyc0NvbnRyb2xsZXIge1xuICBwdWJsaWMgYXN5bmMgaW5kZXgoeyByZXNwb25zZSB9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXJzU2VydmljZXMubGlzdCgpO1xuICAgIHJlc3BvbnNlLnN0YXR1cygyMDApLmpzb24oeyB1c2VyIH0pO1xuICB9XG4gIHB1YmxpYyBhc3luYyBzdG9yZSh7IHJlcXVlc3QsIHJlc3BvbnNlLCBhdXRoIH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVxdWVzdC52YWxpZGF0ZShSZWdpc3RlclZhbGlkYXRvcik7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXJzU2VydmljZXMuY3JlYXRlKGRhdGEpO1xuICAgIHJlc3BvbnNlLnN0YXR1cygyMDEpLmpzb24oeyB1c2VyOiB1c2VyIH0pO1xuICAgIGF3YWl0IGF1dGgubG9naW4odXNlcik7XG4gIH1cbiAgcHVibGljIGFzeW5jIHNob3coeyByZXNwb25zZSwgcGFyYW1zIH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcbiAgICBjb25zdCBpZCA9IGF3YWl0IHBhcmFtcy5pZDtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlcnNTZXJ2aWNlcy5wcm9maWxlKGlkKTtcbiAgICByZXNwb25zZS5zdGF0dXMoMjAwKS5qc29uKHsgdXNlciB9KTtcbiAgfVxuICBwdWJsaWMgYXN5bmMgdXBkYXRlKHsgcmVxdWVzdCwgcmVzcG9uc2UsIHBhcmFtcyB9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcXVlc3QudmFsaWRhdGUoUmVnaXN0ZXJWYWxpZGF0b3IpO1xuICAgIGNvbnN0IGlkID0gYXdhaXQgcGFyYW1zLmlkO1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2Vyc1NlcnZpY2VzLmVkaXQoaWQsIGRhdGEpO1xuICAgIHJlc3BvbnNlLnN0YXR1cygyMDApLmpzb24oeyB1c2VyIH0pO1xuICB9XG4gIHB1YmxpYyBhc3luYyBkZXN0cm95KHsgcmVzcG9uc2UsIHBhcmFtcyB9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG4gICAgY29uc3QgaWQgPSBhd2FpdCBwYXJhbXMuaWQ7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXJzU2VydmljZXMuZGVsZXRlKGlkKTtcbiAgICByZXNwb25zZS5zdGF0dXMoMjAwKS5qc29uKHsgdXNlciB9KTtcblxuICB9XG59XG4iXX0=