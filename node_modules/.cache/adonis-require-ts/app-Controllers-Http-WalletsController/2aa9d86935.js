"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const WalletsServices_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Services/WalletsServices"));
class WalletsController {
    async index({ response }) {
        const wallet = await WalletsServices_1.default.list();
        response.status(200).json({ wallet });
    }
    async store({ auth, request, response }) {
        const data = await request.body();
        const userId = auth.use('api').user?.id;
        const wallet = await WalletsServices_1.default.create(userId, data);
        response.status(201).json({ wallet });
    }
    async show({ response, params }) {
        const id = await params.id;
        const wallet = await WalletsServices_1.default.profile(id);
        response.status(200).json({ wallet });
    }
    async update({ auth, request, response, params }) {
        const data = await request.body();
        const id = await params.id;
        const userId = auth.use('api').user?.id;
        const wallet = await WalletsServices_1.default.edit(id, userId, data);
        response.status(200).json({ wallet });
    }
    async destroy({ response, params }) {
        const id = await params.id;
        const wallet = await WalletsServices_1.default.delete(id);
        response.status(200).json({ wallet });
    }
}
exports.default = WalletsController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2FsbGV0c0NvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJXYWxsZXRzQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLHlHQUEyRDtBQUUzRCxNQUFxQixpQkFBaUI7SUFDN0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLFFBQVEsRUFBdUI7UUFDbEQsTUFBTSxNQUFNLEdBQUcsTUFBTSx5QkFBZSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzVDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBQ00sS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUF1QjtRQUNqRSxNQUFNLElBQUksR0FBRyxNQUFNLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNsQyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUM7UUFDeEMsTUFBTSxNQUFNLEdBQUcsTUFBTSx5QkFBZSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDMUQsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFDTSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBdUI7UUFDekQsTUFBTSxFQUFFLEdBQUcsTUFBTSxNQUFNLENBQUMsRUFBRSxDQUFDO1FBQzNCLE1BQU0sTUFBTSxHQUFHLE1BQU0seUJBQWUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDakQsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFDTSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUF1QjtRQUMxRSxNQUFNLElBQUksR0FBRyxNQUFNLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNsQyxNQUFNLEVBQUUsR0FBRyxNQUFNLE1BQU0sQ0FBQyxFQUFFLENBQUM7UUFDM0IsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDO1FBQ3hDLE1BQU0sTUFBTSxHQUFHLE1BQU0seUJBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM1RCxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUNNLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUF1QjtRQUM1RCxNQUFNLEVBQUUsR0FBRyxNQUFNLE1BQU0sQ0FBQyxFQUFFLENBQUM7UUFDM0IsTUFBTSxNQUFNLEdBQUcsTUFBTSx5QkFBZSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNoRCxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFFeEMsQ0FBQztDQUNGO0FBN0JELG9DQTZCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHQnXG5pbXBvcnQgV2FsbGV0c1NlcnZpY2VzIGZyb20gJ0FwcC9TZXJ2aWNlcy9XYWxsZXRzU2VydmljZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXYWxsZXRzQ29udHJvbGxlciB7XG4gIHB1YmxpYyBhc3luYyBpbmRleCh7IHJlc3BvbnNlIH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcbiAgICBjb25zdCB3YWxsZXQgPSBhd2FpdCBXYWxsZXRzU2VydmljZXMubGlzdCgpO1xuICAgIHJlc3BvbnNlLnN0YXR1cygyMDApLmpzb24oeyB3YWxsZXQgfSk7XG4gIH1cbiAgcHVibGljIGFzeW5jIHN0b3JlKHsgYXV0aCwgcmVxdWVzdCwgcmVzcG9uc2UgfTogSHR0cENvbnRleHRDb250cmFjdCkge1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXF1ZXN0LmJvZHkoKTtcbiAgICBjb25zdCB1c2VySWQgPSBhdXRoLnVzZSgnYXBpJykudXNlcj8uaWQ7XG4gICAgY29uc3Qgd2FsbGV0ID0gYXdhaXQgV2FsbGV0c1NlcnZpY2VzLmNyZWF0ZSh1c2VySWQsIGRhdGEpO1xuICAgIHJlc3BvbnNlLnN0YXR1cygyMDEpLmpzb24oeyB3YWxsZXQgfSk7XG4gIH1cbiAgcHVibGljIGFzeW5jIHNob3coeyByZXNwb25zZSwgcGFyYW1zIH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcbiAgICBjb25zdCBpZCA9IGF3YWl0IHBhcmFtcy5pZDtcbiAgICBjb25zdCB3YWxsZXQgPSBhd2FpdCBXYWxsZXRzU2VydmljZXMucHJvZmlsZShpZCk7XG4gICAgcmVzcG9uc2Uuc3RhdHVzKDIwMCkuanNvbih7IHdhbGxldCB9KTtcbiAgfVxuICBwdWJsaWMgYXN5bmMgdXBkYXRlKHsgYXV0aCwgcmVxdWVzdCwgcmVzcG9uc2UsIHBhcmFtcyB9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcXVlc3QuYm9keSgpO1xuICAgIGNvbnN0IGlkID0gYXdhaXQgcGFyYW1zLmlkO1xuICAgIGNvbnN0IHVzZXJJZCA9IGF1dGgudXNlKCdhcGknKS51c2VyPy5pZDtcbiAgICBjb25zdCB3YWxsZXQgPSBhd2FpdCBXYWxsZXRzU2VydmljZXMuZWRpdChpZCwgdXNlcklkLCBkYXRhKTtcbiAgICByZXNwb25zZS5zdGF0dXMoMjAwKS5qc29uKHsgd2FsbGV0IH0pO1xuICB9XG4gIHB1YmxpYyBhc3luYyBkZXN0cm95KHsgcmVzcG9uc2UsIHBhcmFtcyB9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG4gICAgY29uc3QgaWQgPSBhd2FpdCBwYXJhbXMuaWQ7XG4gICAgY29uc3Qgd2FsbGV0ID0gYXdhaXQgV2FsbGV0c1NlcnZpY2VzLmRlbGV0ZShpZCk7XG4gICAgcmVzcG9uc2Uuc3RhdHVzKDIwMCkuanNvbih7IHdhbGxldCB9KTtcblxuICB9XG59XG4iXX0=